?amis
library(boot)
library(ggplot2)
library(reshape)
?amis
str(amis)
# b) Load the dataset, store it into a variable called "data", and briefly inspect it.
# Feel free to make some plots and calculate some statistics in order to understand
# the data.
head(amis)
# b) Load the dataset, store it into a variable called "data", and briefly inspect it.
# Feel free to make some plots and calculate some statistics in order to understand
# the data.
head(amis)
str(amis)
summary(amis)
ggplot(amis, aes(x=period,y=speed, col=as.factor(warning))) + geom_point()
ggplot(amis, aes(x=as.factor(period),y=speed)) + geom_boxplot()
ggplot(amis, aes(x=as.factor(pair),y=speed)) + geom_point()
# d) Plot boxplots for the distribution of `speed` for each of the `period` values
# (before, immediately after and after some time). Build 2 plots (each containing 3
# boxplots) side by side depending on the `warning` variable.
# (For all plots here and below please use ggplot)
install.packages("gridExtra")
library(gridExtra)
boxplot1_data<-subset(amis, warning==1)
boxplot2_data<-subset(amis, warning==2)
summary(boxplot1_data)
summary(boxplot2_data)
boxplot1<-ggplot(boxplot1_data, aes(x=factor(period),y=speed)) + geom_boxplot()
boxplot2<-ggplot(boxplot2_data, aes(x=factor(period),y=speed)) + geom_boxplot()
grid.arrange(boxplot1, boxplot2, ncol=2)
plot1_data<-subset(amis, warning==1)
plot2_data<-subset(amis, warning==2)
summary(plot1_data)
summary(plot2_data)
boxplot1<-ggplot(plot1_data, aes(x=factor(period),y=speed)) + geom_boxplot()
boxplot2<-ggplot(plot2_data, aes(x=factor(period),y=speed)) + geom_boxplot()
grid.arrange(boxplot1, boxplot2, ncol=2)
amis_sub<-subset(amis, warning==1)
head(amis_sub)
casted_data<-cast(amis_sub, period + pair ~., fun.aggregate = 'mean', value = 'speed', na.rm = TRUE)
colnames(casted_data)[colnames(casted_data)=="(all)"] <- "AverageSpeed"
summary(casted_data)
# b) Build boxplots of the average speed depending on "period".
gplot(data=casted_data, aes(x=factor(period), y=AverageSpeed)) +
geom_boxplot() +
labs(title="The average speed depending on period")
# b) Build boxplots of the average speed depending on "period".
ggplot(data=casted_data, aes(x=factor(period), y=AverageSpeed)) +
geom_boxplot() +
labs(title="The average speed depending on period")
# b) Build boxplots of the average speed depending on "period".
ggplot(data=casted_data, aes(x=factor(period), y=AverageSpeed)) +
geom_boxplot() +
labs(title="The average speed depending on period")
perm_data<-casted_data
head(perm_data)
perm_data<- perm_data[sample(1:nrow(perm_data)), ]
head(perm_data)
summary(aov(casted_data$AverageSpeed~casted_data$period))
summary(aov(perm_data$AverageSpeed~perm_data$period))
# e) Normality of residuals
# (Figure out the best way to check this assumption and give a detailed justified
# answer to whether it is violated or not.)
mod <- lm(casted_data$AverageSpeed~casted_data$period)
re <- residuals(mod)
head(re)
model <- aov(casted_data$AverageSpeed~casted_data$period)
res=model$residuals
head(res)
shapiro.test(res)
prd<-as.factor(casted_data$period)
leveneTest(casted_data$AverageSpeed~prd)
install.packages("car")
library(car)
leveneTest(casted_data$AverageSpeed~prd)
# g) Now we are ready to perform 1-way ANOVA: please use the function aov() on the speed
# depending on the period,report p-value and interpret the result in details
help("aov")
anova<-aov(casted_data$AverageSpeed ~ casted_data$period)
summary(anova)
# h) Please do pairwise t-tests of the same variables as in g) using pairwise.t.test().
pairwise.t.test(casted_data$AverageSpeed,casted_data$period)
# j) Try to use no adjustment for pairwise testing and then the Bonferroni correction.
# Does the result change?
pairwise.t.test(x=casted_data$AverageSpeed, g=casted_data$period, p.adjust.method = "none")
pairwise.t.test(x=casted_data$AverageSpeed, g=casted_data$period, p.adjust.method = "bonferroni")
#######################
### Exercise 3: 2-way ANOVA
#######################
# a) Now we want to analyze the influence of 2 categorial variables
# (period and warning) on the speed.
# So let's turn back to our initial dataset amis (not its subset with warning==1).
# First, we need to average the speed over each `pair`, `warning` and `period
# Cast your data again and assign the resuts to casted_data2.
casted_data2<-cast(amis, pair+period+warning ~., fun.aggregate = mean, value = "speed", na.rm = TRUE)
colnames(casted_data2)[colnames(casted_data2)=="(all)"] <- "AverageSpeed"
head(casted_data2)
# b) Calculate the mean for each of the 6 possible pairs of `period` and `warning`.
mea<-aggregate(AverageSpeed ~ period + warning, casted_data2, mean)
mea
# c) Do you think there is a significant difference between some of the groups?
var(mea[,3])
# The average speeds have a variance of 2.367826.
anova_2<-summary(aov(casted_data2$AverageSpeed~casted_data2$period*casted_data2$warning,casted_data2))
anova_2
setwd("C:/Users/ra/Desktop/Romeo_doc/Uni/statistic with R")
dat<-read.table(file="gender")
head(kidiq_data)
head(dat)
summary(dat)
## Plots
ggplot(data = dat, mapping = aes(x = dat$ITEM_TYPE, y = dat$WORD_TIME)) +
geom_point()
library(ggplot2)
## Plots
ggplot(data = dat, mapping = aes(x = dat$ITEM_TYPE, y = dat$WORD_TIME)) +
geom_point()
## Plots
ggplot(dat, aes(x = ITEM_TYPE, y = WORD_TIME)) +
geom_point()
## Plots
ggplot(dat, aes(x = ITEM_TYPE, y = WORD_TIME)) + geom_boxplot()
## Plot 2
dat1 <- dat %>% filter(RELWDINDEX == 0)
library(lsr)
library(tidyr)
library(dplyr)
## Plot 2
dat1 <- dat %>% filter(RELWDINDEX == 0)
head(dat1)
ggplot(dat1, aes(x = ITEM_TYPE, y = WORD_TIME)) + geom_boxplot()
##
ggplot(dat, aes(x = ITEM_TYPE, y = WORD_TIME)) + geom_point()
model = lmer(Reaction ~ Days + (Days|Subject), sleepstudy)
summary(sleepstudy)
###########################################################################################
###########################################################################################
library(lme4)
library(lattice)
library(Matrix)
library(ggplot2)
library(lsr)
library(tidyr)
library(dplyr)
summary(sleepstudy)
print(xyplot(Reaction ~ Days | Subject, sleepstudy, aspect = "xy",
layout = c(9,2), type = c("g", "p", "r"),
index.cond = function(x,y) coef(lm(y ~ x))[1],
xlab = "Days of sleep deprivation",
ylab = "Average reaction time (ms)"))
model = lmer(Reaction ~ Days + (Days|Subject), sleepstudy)
print(dotplot(ranef(model,condVar=TRUE),  scales = list(x = list(relation = 'free')))
[["Subject"]])
,
## scatterplot
ggplot(dat1, aes(x = ITEM_TYPE, y = WORD_TIME)) + geom_point()
summary(dat)
summary(sleepstudy)
print(xyplot(Reaction ~ Days | Subject, sleepstudy, aspect = "xy",
layout = c(9,2), type = c("g", "p", "r"),
index.cond = function(x,y) coef(lm(y ~ x))[1],
xlab = "Days of sleep deprivation",
ylab = "Average reaction time (ms)"))
# e) You do not need to use ggplot here, just follow the example below.
#    The code is a plot for the dataset 'sleepstudy' from the package 'lme4'.
#    The figure shows relationships between days without sleeping and reaction
#    time for each participant (subject) separately.
head(sleepstudy)
sleepstudy
head(dat)
dat
# d) Make a scatter plot where for each index word as the sentence progresses (RELWDINDEX),
#    the average reading time is shown for each of the two conditions (ITEM_TYPE).
#    Please use two different colours for the different conditions.
ggplot(dat1, aes(x = RELWDINDEX, y = WORD_TIME , colors = ITEM_TYPE)) + geom_point()
# d) Make a scatter plot where for each index word as the sentence progresses (RELWDINDEX),
#    the average reading time is shown for each of the two conditions (ITEM_TYPE).
#    Please use two different colours for the different conditions.
ggplot(dat, aes(x = RELWDINDEX, y = WORD_TIME , colors = ITEM_TYPE)) + geom_point()
# d) Make a scatter plot where for each index word as the sentence progresses (RELWDINDEX),
#    the average reading time is shown for each of the two conditions (ITEM_TYPE).
#    Please use two different colours for the different conditions.
ggplot(dat, aes(x = RELWDINDEX, y = mean(WORD_TIME) )) + geom_point(colors = ITEM_TYPE)
# d) Make a scatter plot where for each index word as the sentence progresses (RELWDINDEX),
#    the average reading time is shown for each of the two conditions (ITEM_TYPE).
#    Please use two different colours for the different conditions.
ggplot(dat, aes(x = RELWDINDEX, y = mean(WORD_TIME) )) + geom_point(colors = dat$ITEM_TYPE)
# d) Make a scatter plot where for each index word as the sentence progresses (RELWDINDEX),
#    the average reading time is shown for each of the two conditions (ITEM_TYPE).
#    Please use two different colours for the different conditions.
d <- dat %>%group_by(RELWDINDEX) %>% summarise_at(vars(WORD_TIME), mean, na.rm = TRUE)
head(d)
d
# d) Make a scatter plot where for each index word as the sentence progresses (RELWDINDEX),
#    the average reading time is shown for each of the two conditions (ITEM_TYPE).
#    Please use two different colours for the different conditions.
d <- dat %>%group_by(RELWDINDEX,ITEM_TYPE ) %>% summarise_at(vars(WORD_TIME), mean, na.rm = TRUE)
head(d)
d
ggplot(d, aes(x = RELWDINDEX, y = WORD_TIME )) + geom_point(colors = dat$ITEM_TYPE)
ggplot(d, aes(x = RELWDINDEX, y = WORD_TIME )) + geom_point(colours = dat$ITEM_TYPE)
ggplot(d, aes(x = RELWDINDEX, y = WORD_TIME, color=ITEM_TYPE )) + geom_point()
print(xyplot(Reaction ~ Days | Subject, sleepstudy, aspect = "xy",
layout = c(9,2), type = c("g", "p", "r"),
index.cond = function(x,y) coef(lm(y ~ x))[1],
xlab = "Days of sleep deprivation",
ylab = "Average reaction time (ms)"))
head(dat)
# e) You do not need to use ggplot here, just follow the example below.
#    The code is a plot for the dataset 'sleepstudy' from the package 'lme4'.
#    The figure shows relationships between days without sleeping and reaction
#    time for each participant (subject) separately.
head(sleepstudy)
print(xyplot(WORD_TIME ~ RELWDINDEX | ITEM_TYPE, d, aspect = "xy",
layout = c(2,1), type = c("g", "p", "r"),
index.cond = function(x,y) coef(lm(y ~ x))[1],
xlab = "index word as the sentence progresses (RELWDINDEX)",
ylab = "the average reading time"))
model1 = lmer(WORD_TIME ~ RELWDINDEX + (RELWDINDEX|ITEM_TYPE), d)
print(dotplot(ranef(model1,condVar=TRUE),  scales = list(x = list(relation = 'free')))
[["Subject"]])
print(dotplot(ranef(model1,condVar=TRUE),  scales = list(x = list(relation = 'free')))
[["ITEM_TYPE"]])
model = lmer(Reaction ~ Days + (Days|Subject), sleepstudy)
print(dotplot(ranef(model,condVar=TRUE),  scales = list(x = list(relation = 'free')))
[["Subject"]])
model1 = lmer(WORD_TIME ~ RELWDINDEX + (RELWDINDEX|ITEM_TYPE), d)
print(dotplot(ranef(model1,condVar=TRUE),  scales = list(x = list(relation = 'free')))
[["ITEM_TYPE"]])
print(dotplot(ranef(model,condVar=TRUE),  scales = list(x = list(relation = 'free')))
[["Subject"]])
# f) Experiment with calculating a linear mixed effects model for this study,
#    and draw the appropriate conclusions (give a detailed explanation
#    for each model).
model1 = lmer(WORD_TIME ~ RELWDINDEX + (RELWDINDEX|ITEM_TYPE), d)
model1
print(dotplot(ranef(model1,condVar=TRUE),  scales = list(x = list(relation = 'free')))
[["ITEM_TYPE"]])
model1 = lmer(WORD_TIME ~ RELWDINDEX + (RELWDINDEX|ITEM_TYPE), d)
isSingular(model1 , tol = 1e-05)
?isSingular
isSingular(model1 , tol = 1e-05)
print(dotplot(ranef(model1,condVar=TRUE),  scales = list(x = list(relation = 'free')))
[["ITEM_TYPE"]])
print(xyplot(WORD_TIME ~ RELWDINDEX | ITEM_TYPE, d, aspect = "xy",
layout = c(2,1), type = c("g", "p", "r"),
index.cond = function(x,y) coef(lm(y ~ x))[1],
xlab = "index word as the sentence progresses (RELWDINDEX)",
ylab = "the average reading time"))
## Boxplot
ggplot(dat, aes(x = ITEM_TYPE, y = WORD_TIME)) + geom_boxplot()
ggplot(d, aes(x = RELWDINDEX, y = WORD_TIME, color=ITEM_TYPE )) + geom_point()
